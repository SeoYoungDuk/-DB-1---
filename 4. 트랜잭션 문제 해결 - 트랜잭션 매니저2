클라이언트 요청으로 서비스 로직을 실행함.
서비스 계층에서 'transactionManger.getTransaction()' 을 호출함. => 트랜잭션 시작
트랜잭션 시작하려면 데이터 베이스 커넥션 필요함. 트랜잭션 매니저는 데이터 소스를 사용해서 커넥션 생성한다.
커넥션을 수동커밋모드로 변경해서 트랜잭션 시작
커넥션을 동기화 매니저에 보관한다.
트랜잭션 동기화 매니저는 쓰레드로컬에 커넥션을 보관한다. 멀티쓰레드 환경에서 안전하게 커넥션을 보관 가능하다.

서비스는 비즈니스 로직을 실행하면서 레포지토리의 메서드를 호출한다.
리포지토리 메서드들은 트랜잭션이 시작된 커넥션 필요 리포지토리는 커넥션을 동기화 매니저에서 가져옴 커넥션 사용하고, ㅌ랜잭션도 유지
커넥션을 사용해서 데이터베이스에 SQL 전달


비즈니스 로직 끝나고 트랜잭션을 종료한다. 트랜잭션은 커밋하거나 록백하면 종료된다.
트랜잭션 종료하라면 동기화 된 커넥션이 필요함. 트랜잭션 동기화 매니저를 통해 동기화된 커켁션을 획득한다.
획득한 커넥션을 통해 트랜잭션 커밋하거나 롤백한다.

=> 트랜잭션 추상화 때문에 jdbc 기술에 의존하지 않는다.
SQLException은 남아있다.

